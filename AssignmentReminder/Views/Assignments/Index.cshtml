@model IEnumerable<AssignmentReminder.Models.Assignment>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Notifications -->
@{
    var dueSoonAssignments = ViewData["DueSoon"] as List<AssignmentReminder.Models.Assignment>;
}
@if (dueSoonAssignments != null && dueSoonAssignments.Any())
{
    <div class="alert alert-info" role="alert">
        <h5>Upcoming Assignments</h5>
        <ul>
            @foreach (var assignment in dueSoonAssignments)
            {
                <li>
                    <strong>@assignment.CourseName</strong> (Course Code: @assignment.CourseCode) 
                    is due on @assignment.DueDate.ToString("g").
                </li>
            }
        </ul>
    </div>
}

@if (ViewData["Notifications"] is List<AssignmentReminder.Models.Notification> notifications && notifications.Any())
{
    <div class="alert alert-info" role="alert">
        <h5>Notifications</h5>
        <ul>
            @foreach (var notification in notifications)
            {
                <li>
                    @notification.Message
                    <button class="btn btn-sm btn-link text-decoration-none" 
                            onclick="markAsRead(@notification.Id)">Dismiss</button>
                </li>
            }
        </ul>
    </div>
}
else
{
    <p class="text-muted">No new notifications.</p>
}


<h2>Your Assignments</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Assignment</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Course Code</th>
            <th>Course Name</th>
            <th>Week</th>
            <th>Type</th>
            <th>Due Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var assignment in Model)
        {
            <tr>
                <td>@assignment.CourseCode</td>
                <td>@assignment.CourseName</td>
                <td>@assignment.WeekNumber</td>
                <td>@assignment.Type</td>
                <td>@assignment.DueDate.ToString("g")</td>
                <td>@(assignment.IsCompleted ? "Completed" : "Not Completed")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@assignment.Id" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Details" asp-route-id="@assignment.Id" class="btn btn-info btn-sm">Details</a>
                    <a asp-action="Delete" asp-route-id="@assignment.Id" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Overdue Assignments -->
<h3 class="text-danger">Overdue</h3>
@{
    var overdueAssignments = ViewData["Overdue"] as List<AssignmentReminder.Models.Assignment>;
}
@if (overdueAssignments != null && overdueAssignments.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Course Code</th>
                <th>Course Name</th>
                <th>Due Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var assignment in overdueAssignments)
            {
                <tr>
                    <td>@assignment.CourseCode</td>
                    <td>@assignment.CourseName</td>
                    <td>@assignment.DueDate.ToString("g")</td>
                    <td>Overdue</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@assignment.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@assignment.Id" class="btn btn-info btn-sm">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="text-muted">No overdue assignments!</p>
}

<!-- Due Soon Assignments -->
<h3 class="text-warning">Due Soon</h3>
@if (dueSoonAssignments != null && dueSoonAssignments.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Course Code</th>
                <th>Course Name</th>
                <th>Due Date</th>
                <th>Time Remaining</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var assignment in dueSoonAssignments)
            {
                var timeRemaining = assignment.DueDate - DateTime.Now;
                <tr>
                    <td>@assignment.CourseCode</td>
                    <td>@assignment.CourseName</td>
                    <td>@assignment.DueDate.ToString("g")</td>
                    <td>
                        @if (timeRemaining.TotalHours < 24)
                        {
                            <span class="text-danger">Due in @timeRemaining.Hours hours</span>
                        }
                        else
                        {
                            <span class="text-warning">Due in @timeRemaining.Days days</span>
                        }
                    </td>
                    <td>Due Soon</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@assignment.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@assignment.Id" class="btn btn-info btn-sm">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="text-muted">No assignments due soon!</p>
}

<!-- Completed Assignments -->
<h3 class="text-success">Completed</h3>
@{
    var completedAssignments = ViewData["Completed"] as List<AssignmentReminder.Models.Assignment>;
}
@if (completedAssignments != null && completedAssignments.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Course Code</th>
                <th>Course Name</th>
                <th>Due Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var assignment in completedAssignments)
            {
                <tr>
                    <td>@assignment.CourseCode</td>
                    <td>@assignment.CourseName</td>
                    <td>@assignment.DueDate.ToString("g")</td>
                    <td>Completed</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@assignment.Id" class="btn btn-info btn-sm">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="text-muted">No completed assignments!</p>
}

<script>
    function markAsRead(notificationId) {
        fetch(`/Notifications/MarkAsRead/${notificationId}`, { method: 'POST' })
            .then(response => {
                if (response.ok) {
                    location.reload(); // Reload the page to update notifications
                } else {
                    alert("Failed to dismiss the notification.");
                }
            });
    }
</script>
